Этапы создания сайта
(пометки по обучению)

----------------------------------------------------------------------

Созание вертуального окружения:
---
1ый способ:
python -m venv <имя окружения>
---
2ой способ:
pip install virtualenv
virtualenv <имя окружения>
---
Зайти в вертуальное окружение:
-Linux:
source <имя окружения>/bin/activate
-Windows:
<имя окружения>\Scripts\activate
---
-Выйти извертуального окружения:
deactivate

----------------------------------------------------------------------

Файл requirements.txt:
---
Запись в файл:
python freeze > requirements.txt
---
Чтение с файла:
python install -r requirements.txt

----------------------------------------------------------------------

Git:
---
(файл .gitconfig содержит конфигурации Git)
(файл .gitignore содержит наименование папок и файлов которые игнорирует Git)
---
Установить имя пользователя в Git:
git config --global user.name "<имя>"
---
Установить почту пользователя в Git:
git config --global user.email "<почта>"
---
Просмотр конфигураций:
git config --list
---
Создать базу данных .git в репозитории:
git init .
---
Проверка статуса (происходящее в базе Git):
git status
---
Список бренчей:
git branch
---
Создать бренч:
git branch <имя бренча>
---
Перейти на другой бренч:
git checkout <имя бренча>
---
Удаление бренча:
git branch -d <имя бренча>
---
Добавление файлов в репозиторий Git:
git add . (вместо точки можно указать папку или файл)
--
Закрепление в Git:
git commit -m "<описание закрепления>"
---
Копировать проект с сервера:
git clone <ссылка>
---
Отправка обновленного проекта с пк на сервер:
git push
---
Обновление проекта на пк с сервера:
git pull

----------------------------------------------------------------------

1. Создание проекта, приложения, миграций, суперпользователя, запуск локального сервера
    a) django-admin startproject <имя проекта> . (точка не создает подкаталог с именем проекта)
    b) python manage.py startapp <имя приложения>
    c) python manage.py makemigrations
       python manage.py migrate
    d) python manage.py createsuperuser
    e) python manage.py runserver

2. Создание моделей приложения (таблицы базы данных)

3. Применение миграций (и related_name)

4. Переделывать архитектуру моделей

5. Новые модели и админка

6. Изображение и медиа

7. Товары разных моделей в одной через ContentType (для отображения товаров разных моделей на гравной странице)

8. Добавление шаблона

9. Изображение ImageField

10. Максимальный размер изображения

11. Изменение размера изображения

12. Модель представления шаблон (model-view-template)

13. Наследование в шаблонах [Template Inheritance]

14. Тег Include

15. Кастомные тэги шаблонов [Custom template tags]

16. Добавление товара в корзину (через django shell)

17. Django админка JavaScript, jQuery

18. Django Manager и шаблоны

19. DetailView категории

20. Mixins (миксины)

21. Добавляем товар на главную страницу

22. Рендеринг корзины в шаблоне

23. Добавление товара в корзину

24. Добавление товара в корзину (продолжение)

25. Mixins (продолжение). Миксин для корзины

26. Актуализируем информацию в корзине

27. Удаление товара из корзины

28. Изменение количества товара в корзине

